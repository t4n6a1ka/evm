## Use the latest 2.1 version of CircleCI pipeline processing engine, see https://circleci.com/docs/2.0/configuration-reference/
                version: 2.1

## Use a package of configuration called an orb, see https://circleci.com/docs/2.0/orb-intro/
                   orbs:
  ## Declare a dependency on the welcome-orb
                welcome: circleci/welcome-orb@0.3.1
                  slack: circleci/slack@0.1.0
                 heroku: circleci/heroku@0.0.1
  
## Orchestrate or schedule a set of jobs, see https://circleci.com/docs/2.0/workflows/
              workflows:
                   jobs:
                   
                  build:
  
    docker:
    
      - image: buildpack-deps:CI
      
    environment:
    
      FOO: bar
    parallelism: 24
    resource_class: large
    working_directory: ~/my-app
    branches:
      only:
        - master
        - Master
    steps:
      - run: make test
      - run: make
                  build: repo
                  
                 docker: 
      - image          : circleci/<language>:<version TAG>
                  steps:
      - checkout
      - run: <command>
                   test:
                 docker:
      - image          : circleci/<language>:<version TAG>
                  steps:
      - checkout
      - run: <command>
              workflows:
                version: 2
# build-test-and-deploy:# Use the latest 2.1 version of CircleCI pipeline processing engine, see https://circleci.com/docs/2.0/configuration-reference/
version: 2.1

# Use a package of configuration called an orb, see https://circleci.com/docs/2.0/orb-intro/
orbs:
  # Declare a dependency on the welcome-orb
  Christopher del Rosario: circleci/welcome-orb@0.3.1

# Orchestrate or schedule a set of jobs, see https://circleci.com/docs/2.0/workflows/
workflows:
  # Name the workflow "Christopher del Rosario"
  Christopher del Rosario:

  # Run the welcome/run job in its own container
    jobs:
      - Christopher del Rosario/run

                   jobs:
      - build
      - test1          :
               requires:
      - build
      - test2          :
               requires:
      - test1
      - deploy         :
               requires:
      - test2

  ## Name the workflow "Welcome"
                 Welcome:
   ## Run the welcome/run job in its own container
                    jobs:
      - welcome/run
